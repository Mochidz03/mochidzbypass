(async function() {
    'use strict';

    // Cấu hình
    const supportedDomains = [
        'yeumoney.com',
        'yeumoney.net',
        'yeumoney.org',
        // Thêm các tên miền khác nếu cần
    ];
    const waitTime = 75 * 1000; // 75 giây tính bằng mili giây
    const maxRetries = 3; // Số lần thử lại tối đa khi lấy mã
    const randomDelay = () => Math.random() * 100 + 50; // Độ trễ ngẫu nhiên 50-150ms

    // Kiểm tra tên miền có được hỗ trợ không
    function isSupportedDomain() {
        return supportedDomains.some(domain => window.location.hostname.includes(domain));
    }

    // Chờ phần tử xuất hiện trong DOM
    async function waitForElement(selector, timeout = 10000) {
        return new Promise((resolve, reject) => {
            const element = document.querySelector(selector);
            if (element) return resolve(element);

            const observer = new MutationObserver(() => {
                const target = document.querySelector(selector);
                if (target) {
                    observer.disconnect();
                    resolve(target);
                }
            });
            observer.observe(document.body, { childList: true, subtree: true });

            setTimeout(() => {
                observer.disconnect();
                reject(new Error(`Không tìm thấy phần tử ${selector} trong ${timeout}ms`));
            }, timeout);
        });
    }

    // Mô phỏng nhập liệu như người dùng
    function simulateInput(element, value) {
        const inputEvent = new Event('input', { bubbles: true });
        element.value = value;
        element.dispatchEvent(inputEvent);
    }

    // Lấy mã từ trang trung gian
    async function fetchCode(url, retryCount = 0) {
        try {
            return new Promise((resolve, reject) => {
                GM_xmlhttpRequest({
                    method: 'GET',
                    url: url,
                    onload: response => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(response.responseText, 'text/html');
                        const codeElement = doc.querySelector('selector-for-code'); // Thay bằng selector thực tế
                        if (codeElement) {
                            resolve(codeElement.textContent.trim());
                        } else {
                            if (retryCount < maxRetries) {
                                setTimeout(() => fetchCode(url, retryCount + 1), 1000);
                            } else {
                                reject(new Error('Không tìm thấy phần tử chứa mã'));
                            }
                        }
                    },
                    onerror: () => reject(new Error('Lỗi khi lấy mã'))
                });
            });
        } catch (error) {
            if (retryCount < maxRetries) {
                await new Promise(resolve => setTimeout(resolve, 1000));
                return fetchCode(url, retryCount + 1);
            }
            throw error;
        }
    }

    // Logic chính để vượt Yeumoney
    async function bypassYeumoney() {
        if (!isSupportedDomain()) return;

        try {
            // Bước 1: Chờ đồng hồ đếm ngược
            const timerElement = await waitForElement('#timer, .countdown', 15000);
            await new Promise(resolve => setTimeout(resolve, waitTime + randomDelay()));

            // Bước 2: Tìm link trung gian
            const linkElement = await waitForElement('a[href*="verify"], a[href*="code"]');
            const codeUrl = linkElement.href;

            // Bước 3: Lấy mã
            const code = await fetchCode(codeUrl);

            // Bước 4: Nhập mã
            const codeInput = await waitForElement('input[name="code"], #code-input');
            simulateInput(codeInput, code);

            // Bước 5: Nhấn nút xác nhận
            const submitButton = await waitForElement('button[type="submit"], #submit-btn');
            await new Promise(resolve => setTimeout(resolve, randomDelay()));
            submitButton.click();

            // Bước 6: Chờ chuyển hướng
            const finalLink = await waitForElement('a[href*="final"], #final-link', 10000);
            window.location.href = finalLink.href;
        } catch (error) {
            console.error('Vượt link thất bại:', error);
        }
    }

    // Chạy script
    if (document.readyState === 'complete') {
        bypassYeumoney();
    } else {
        window.addEventListener('load', bypassYeumoney);
    }
})();
